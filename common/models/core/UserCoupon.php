<?php
namespace common\models\core;

use framework\components\ToolsAbstract;
use Yii;
use framework\db\ActiveRecord;

/**
 * Class UserCoupon
 * @package common\models\salesrule
 *
 * @property integer $customer_id
 * @property integer $state
 * @property integer $rule_id
 * @property integer $entity_id
 * @property string $expiration_date
 * @property integer $source
 * @property string $created_at
 * @property \common\models\core\Rule $rule
 */
class UserCoupon extends ActiveRecord
{
    const NOT_USE_COUPON = -1;//不使用优惠券
    const NOT_USE_COUPON_TEXT = '不使用优惠券';
    const NOT_AVAILABLE_COUPON_TEXT = '无可用优惠券';


    const USER_COUPON_UNUSED = 1;
    const USER_COUPON_USED = 2;

    const COUPON_SOURCE_RECEIVE = 0;
    const COUPON_SOURCE_SYSTEM = 1;

    const COUPON_KEY_PREFIX = 'coupon_';
    /**
     * 用户最大优惠券的数量
     */
    const MAX_COUPON_LIMIT = 30;

    /**
     * 已读
     * @var integer
     */
    const READ = 1;
    /**
     * 未读
     * @var integer
     */
    const UNREAD = 0;

    /** @var  Usage $usage */
    public $usage;

    /**
     * 總數，統計用
     * @var integer
     */
    public $count;

    /**
     * 總和，統計用
     * @var float
     */
    public $sum;

    /**
     * 存储试算的金额
     * @var
     */
    protected $discountAmount;
    /**
     * 存储试算中不能使用的原因
     * @var
     */
    protected $reason;

    /**
     * 是否为赠品
     * @var
     */
    protected $giftDiscount;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'salesrule_user_coupon';
    }

    /**
     * @return \yii\db\Connection the database connection used by this AR class.
     */
    public static function getDb()
    {
        return Yii::$app->get('coreDb');
    }

    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
        if ($this->usage) {
            $this->usage->rule_id = $this->rule_id;
            $this->usage->customer_id = $this->customer_id;
            $this->usage->salesrule_user_coupon_id = $this->entity_id;
            $this->usage->created_at = date('Y-m-d H:i:s');
            $this->usage->save();
        }

    }

    public function getRule()
    {
        return $this->hasOne(Rule::className(), ['rule_id' => 'rule_id']);
    }

    /**
     * @return mixed
     */
    public function getReason()
    {
        return $this->reason;
    }

    /**
     * @param mixed $reason
     */
    public function setReason($reason)
    {
        $this->reason = $reason;
    }

    /**
     * @return mixed
     */
    public function getDiscountAmount()
    {
        return $this->discountAmount;
    }

    /**
     * @param mixed $discountAmount
     */
    public function setDiscountAmount($discountAmount)
    {
        $this->discountAmount = $discountAmount;
    }

    /**
     * @return mixed
     */
    public function getGiftDiscount()
    {
        return $this->giftDiscount;
    }

    /**
     * @param mixed $giftDiscount
     */
    public function setGiftDiscount($giftDiscount)
    {
        $this->giftDiscount = $giftDiscount;
    }

    /**
     * @return int
     */
    public function isSoonExpire()
    {
        $date = ToolsAbstract::getDate();
        $expiration = strtotime($this->expiration_date);
        $current = $date->timestamp();
        $dt = $expiration - $current;
        if ($dt > 0 && $dt <= 3600 * 72) {
            return 1;
        } else {
            return 0;
        }
    }

}
